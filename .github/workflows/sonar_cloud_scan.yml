name: "Sonar Cloud Scan"

# ðŸ“Œ Trigger Conditions
# Run on push to main, staging, dev, and feature branches
# Also run on pull requests (opened, updated, reopened)
on:
  push:
    branches:
      - main
      - staging
      - dev
      - "feature/**"
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      # âœ… Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # Required for better relevancy of analysis

      # âœ… Step 2: Run SonarCloud Scan
      - name: Run SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # Used to fetch PR info
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     # Personal token from SonarCloud

      # âœ… Step 3: Enforce Quality Gate
      # This ensures the pipeline fails if code does not meet SonarCloud quality standards
      - name: SonarCloud Quality Gate Check
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
